18.4.12
https://www.youtube.com/watch?v=DZ0-GMtOtEc
https://github.com/shreyakamath2311/Xv6-MLFQ-Scheduler
https://github.com/marf/xv6-scheduling

1. create int priority, ticks in struct proc from proc.h
2. allocproc will set priority to 0 (proc.c allocproc() function), ticks to 0
// 3. from exec.c add curproc->priority = 0; on line 102 -> so that process can have priority when it starts to execute maybe? idk...

4. create queue & MLFQ structure in proc.c
5. implement sys_yield by following the steps from lab03.
6. find functions calling allocproc using cscope (userinit & fork)
	both functions contains acquire(&ptable.lock) & release to make proc RUNNABLE
	add push(ptable.mlfq.queue[0], p); to process MLFQ
7. -std=gnu99 added for Makefile inoder to run native in osX
	make TOOLPREFIX=i386-elf- CPUS=1 qemu-nox

original p: 80111d54
original p: 80111dd8
